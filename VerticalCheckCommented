import numpy as np

class Sudoku ():
    
    Store =[]

    def __init__(self):

        self.grid = input("input sudoku numbers, plese use 0 when empty : ")
        self.grid = [int(i) for i in self.grid]

    def reshape():
        if len(Sudoku.Store) >8:
            count = 0
            g=[]
            k=[]
            l=[]

            for  i in Sudoku.Store:
                if count == 0:
                    g = i
                elif count == 3:
                    k = i
                elif count == 6:
                    l = i
                count+=1    

                if 1<count <= 3:
                    g=np.concatenate((g,i), axis=1)
                elif 4 < count <= 6:
                    k  = np.concatenate((k,i), axis=1)
                elif count > 7:
                    l =np.concatenate((l,i), axis=1)

            Sudoku.Store = np.concatenate((g,k,l), axis=0)
        else:
            print("Sudoku not complete")

class Box(Sudoku):  
    def __init__ (self,name):
        Sudoku.__init__(self)
        self.name= name
        self.options = {}
        self.grid = np.reshape(self.grid,(3,3))
        Sudoku.Store.append(self.grid)

boxes =[i for i in range(9)]
 
for i in range(9):
    boxes[i] = Box(str(i))

#VERTICAL CHECK
#all numbers in same column will have same options

#make list of lists from 1-9 to show initial options for each column
xopt = [0 for k in range(9)]
for i in range(0,9):
    xopt[i] = {1,2,3,4,5,6,7,8,9}

#for each column, work down the column and remove numbers from the corresponding list in options

#i determines the box - NB. the box under a given box is three boxes after the given one
for i in range(0,9,3):

    #j determines the row
    for j in range(0,3):
    
        #k determines the column
        for k in range(0,3):
        
            #columns 1-3
            try:
                xopt[k].remove(Sudoku.Store[i][j][k])
            except(ValueError, KeyError):
                pass
                
            #columns 4-6    
            try:
                xopt[k+3].remove(Sudoku.Store[i+1][j][k])
            except(ValueError, KeyError):
                pass
                
            #columns 7-9
            try:
                xopt[k+6].remove(Sudoku.Store[i+2][j][k])
            except(ValueError, KeyError):
                pass
print(xopt)
