import numpy as np

class Sudoku ():
    
    Store =[]
    
    def __init__(self):
        self.grid = input("input sudoku numbers, plese use 0 when empty : ")
        self.grid = [int(i) for i in self.grid]
        
    def reshape():
        if len(Sudoku.Store) >8:
            count = 0
            g=[]
            k=[]
            l=[]
            for  i in Sudoku.Store:
                
                if count == 0:
                    g = i
                elif count == 3:
                    k = i
                elif count == 6:
                    l = i
                count+=1    
                if 1<count <= 3:
                    g=np.concatenate((g,i), axis=1)
                elif 4 < count <= 6:
                    k  = np.concatenate((k,i), axis=1)
                elif count > 7:
                    l =np.concatenate((l,i), axis=1)
            
            Sudoku.Store = np.concatenate((g,k,l), axis=0)
        else:
            print("Sudoku not complete")
    
    
    
class Box(Sudoku):  
    def __init__ (self,name):
        Sudoku.__init__(self)
        self.name= name
        self.options = {}
        self.grid = np.reshape(self.grid,(3,3))
        Sudoku.Store.append(self.grid)
        
        
        
boxes =[i for i in range(9)]    

for i in range(3):
    boxes[i] = Box(str(i))
